import mathimport numpy as npimport pandas as pdclass NetworkFormationModel:        def __init__(        self,        n: int,        k: int,        distance_threshold: float,    ) -> None:        """        """        # Hyperparameters        self.n = n        self.k = k        self.distance_threshold = distance_threshold                # World variables        self.individuals = pd.DataFrame({'id': np.arange(n)})            def set_up_world(density: float):        """        Given desired density,        place individuals on boundariless grid.        """        # Calculate grid size        D = math.sqrt(self.n / density)                        # Place individual on (torus) grid        self.individuals['x'] = np.random.uniform(low=0, high=D, size=self.n)        self.individuals['y'] = np.random.uniform(low=0, high=D, size=self.n)